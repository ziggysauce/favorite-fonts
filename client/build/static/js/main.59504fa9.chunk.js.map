{"version":3,"sources":["components/navigation/Navbar.jsx","Google_Fonts_logo.svg","components/header/Header.jsx","components/footer/Footer.jsx","components/body/Body.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","state","this","parentState","searchFont","previewType","previewText","fontSize","darkMode","gridMode","onSearchFont","onSelectPreviewTextType","onChangeTextPreview","onSelectFontSize","onToggleDarkMode","onToggleGridMode","onReset","className","icon","faSearch","value","placeholder","onChange","map","option","size","onClick","type","faMoon","faSun","faGripHorizontal","faListUl","faRedo","React","Component","Header","href","target","rel","src","GoogleLogo","alt","Footer","initiateAPIFetch","a","callBackendAPI","data","length","forEach","font","apiUrl","push","family","replace","url","join","fontLink","document","createElement","head","appendChild","setState","loading","body","axios","response","responseTwo","console","log","newBody","testText","status","Error","message","filteredData","filter","f","toLowerCase","includes","role","fontStyle","fontFamily","classNames","style","scrollToTop","window","scrollTo","top","behavior","App","showScrollButton","bind","addEventListener","pageYOffset","e","Number","Body","faArrowUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59504fa9.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faRedo,\n  faSearch,\n  faSun,\n  faMoon,\n  faGripHorizontal,\n  faListUl,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      parentState: {\n        searchFont,\n        previewType,\n        previewText,\n        fontSize,\n        darkMode,\n        gridMode,\n      },\n      onSearchFont,\n      onSelectPreviewTextType,\n      onChangeTextPreview,\n      onSelectFontSize,\n      onToggleDarkMode,\n      onToggleGridMode,\n      onReset,\n    } = this.props;\n    const textPreviewOptions = [\n      'Custom',\n      'Sentence',\n      'Alphabet',\n      'Paragraph',\n      'Numerals',\n    ];\n    const fontSizes = [\n      '8',\n      '12',\n      '14',\n      '20',\n      '24',\n      '32',\n      '40',\n      '64',\n      '96',\n      '120',\n      '184',\n      '280',\n    ];\n    return (\n      <div className=\"sticky-top px-4 py-2 border-bottom bg-body\">\n        <div className=\"d-flex m-3 border rounded-pill\">\n          <div className=\"p-3 border-end col-3\">\n            <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n              <FontAwesomeIcon\n                className=\"fa-icon muted cursor-pointer\"\n                icon={faSearch}\n              />\n              <input\n                value={searchFont}\n                placeholder=\"Search fonts\"\n                className=\"border-0 outline-0 mx-2 w-100\"\n                onChange={onSearchFont}\n              />\n            </div>\n          </div>\n          <div className=\"p-3 border-end col-5\">\n            <div className=\"d-flex\">\n              <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                <select\n                  value={previewType}\n                  className=\"border-0 outline-0 cursor-pointer\"\n                  aria-label=\"Text preview select\"\n                  onChange={onSelectPreviewTextType}\n                >\n                  {textPreviewOptions.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n                <input\n                  onChange={onChangeTextPreview}\n                  value={previewText}\n                  placeholder=\"Type something\"\n                  className=\"border-0 outline-0 mx-2 w-100\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"p-3 border-end col-1\">\n            <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n              <select\n                value={`${fontSize}`}\n                className=\"border-0 outline-0 cursor-pointer\"\n                aria-label=\"Font size select\"\n                onChange={onSelectFontSize}\n              >\n                {fontSizes.map((size) => (\n                  <option key={size} value={size}>\n                    {size}px\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"border-end col-1\">\n            <button\n              onClick={onToggleDarkMode}\n              type=\"button\"\n              className=\"d-flex justify-content-center align-items-center h-100 w-100 bg-transparent border-0 outline-0\"\n            >\n              <FontAwesomeIcon\n                className=\"fa-icon muted\"\n                icon={darkMode ? faMoon : faSun}\n              />\n            </button>\n          </div>\n          <div className=\"border-end col-1\">\n            <button\n              onClick={onToggleGridMode}\n              type=\"button\"\n              className=\"d-flex justify-content-center align-items-center h-100 w-100 bg-transparent border-0 outline-0\"\n            >\n              <FontAwesomeIcon\n                className=\"fa-icon muted\"\n                icon={gridMode ? faGripHorizontal : faListUl}\n              />\n            </button>\n          </div>\n          <div className=\"col-1\">\n            <button\n              onClick={onReset}\n              type=\"button\"\n              className=\"d-flex justify-content-center align-items-center h-100 w-100 bg-transparent border-0 outline-0\"\n            >\n              <FontAwesomeIcon className=\"fa-icon muted\" icon={faRedo} />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/Google_Fonts_logo.46e66fd8.svg\";","import React from 'react';\nimport GoogleLogo from '../../Google_Fonts_logo.svg';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 border-bottom p-4 d-flex justify-content-between align-items-center\">\n        <a\n          href=\"https://fonts.google.com\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"m-0 px-1\"\n        >\n          <img\n            src={GoogleLogo}\n            className=\"google-font-logo\"\n            alt=\"Google Fonts logo\"\n          />\n        </a>\n        <div className=\"d-flex\">\n          <a\n            href=\"https://fonts.google.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"m-0 px-1\"\n          >\n            Catalog\n          </a>\n          <a\n            href=\"https://fonts.google.com/featured\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"m-0 px-1\"\n          >\n            Featured\n          </a>\n          <a\n            href=\"https://fonts.google.com/about\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"m-0 px-1\"\n          >\n            About\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 border-top\">\n        <p className=\"mb-0 py-4\">\n          Coded by\n          <a\n            href=\"https://github.com/ziggysauce\"\n            className=\"px-1\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ziggysauce\n          </a>\n          | 2021 | Chingu Solo Project\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","/* eslint-disable no-console */\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport LazyLoad from 'react-lazyload';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: null,\n      filteredData: [],\n      testText: 'Old text... Boo',\n    };\n  }\n\n  componentDidMount() {\n    this.initiateAPIFetch();\n  }\n\n  /**\n   * @description Begins the backend API call  logic\n   * If applicable, retrieves the google fonts API data\n   * and adds stylesheets for each font family\n   */\n  initiateAPIFetch = async () => {\n    const { data } = await this.callBackendAPI();\n    if (data && data.length) {\n      data.forEach((font) => {\n        const apiUrl = [];\n        apiUrl.push('https://fonts.googleapis.com/css?family=');\n        apiUrl.push(font.family.replace(/ /g, '+'));\n        const url = apiUrl.join('');\n        const fontLink = document.createElement('link');\n        fontLink.rel = 'stylesheet';\n        fontLink.href = url;\n        document.head.appendChild(fontLink);\n      });\n    }\n    this.setState({ data, loading: false });\n  };\n\n  /**\n   * @description Fetches backend API data\n   */\n  callBackendAPI = async () => {\n    let body = { data: null };\n    try {\n      const response = await axios('/api');\n      // const response = await fetch('/api', {\n      //   method: 'GET',\n      //   mode: 'no-cors',\n      //   credentials: 'same-origin',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      // });\n      const responseTwo = await axios('/api-test');\n      // const responseTwo = await fetch('/api-test', {\n      //   method: 'GET',\n      //   mode: 'no-cors',\n      //   credentials: 'same-origin',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      // });\n      if (responseTwo) {\n        console.log('HMM: ', responseTwo);\n        const newBody = responseTwo.data;\n        console.log('HMM 2: ', newBody);\n        const testText = newBody.data;\n        this.setState({ testText });\n      }\n      if (response) {\n        body = response.data;\n      }\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n    } catch (error) {\n      // Silently fail\n      console.log('AN ERROR OCCURRED: ', error);\n    }\n    return body;\n  };\n\n  render() {\n    const {\n      parentState: { searchFont, previewText, fontSize, gridMode },\n    } = this.props;\n    const { loading, data, testText } = this.state;\n\n    // Filter font family data based on search results\n    let filteredData = data;\n    if (data && data.length && searchFont.length) {\n      filteredData = data.filter((f) =>\n        f.family.toLowerCase().includes(searchFont.toLowerCase())\n      );\n    }\n\n    return (\n      <div className=\"w-100 h-100\">\n        {loading && (\n          <div className=\"p-3 m-3\">\n            <h2>Loading Font Families...</h2>\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        )}\n        {testText && testText.length && (\n          <div>\n            <h2>This is from the server: {testText}</h2>\n          </div>\n        )}\n        {!loading && (!data || data.length === 0) && (\n          <div className=\"p-3 m-3\">\n            <h2>\n              Sorry, something went wrong. Unable to load any font families!\n            </h2>\n          </div>\n        )}\n        {data && data.length && (\n          <div className=\"pb-2 pt-4 px-3 w-100 text-start\">\n            <small>\n              Displaying {filteredData.length} of {data.length} families.\n            </small>\n          </div>\n        )}\n        {filteredData && filteredData.length ? (\n          <div className=\"d-flex flex-wrap\">\n            {filteredData.map((f) => {\n              const fontStyle = {\n                fontFamily: `${f.family}, sans-serif`,\n                fontSize: `${fontSize}px`,\n              };\n              return (\n                <LazyLoad\n                  key={f.family.replace(/ /g, '-')}\n                  className={classNames(\n                    { 'p-3 col-12': true },\n                    { 'col-md-6 col-xl-4': gridMode }\n                  )}\n                >\n                  <div className=\"card h-100 p-3 d-flex flex-column align-items-start\">\n                    <h5 className=\"mb-0 pb-3 muted\">{f.family}</h5>\n                    <p className=\"mb-0 text-start text-break\" style={fontStyle}>\n                      {previewText || 'Type something...'}\n                    </p>\n                  </div>\n                </LazyLoad>\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","/* eslint-disable react/no-unused-state */\n\nimport React from 'react';\nimport './App.css';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from './components/navigation/Navbar';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Body from './components/body/Body';\n\n/**\n * @description Scrolls to the top of the window\n */\nconst scrollToTop = () => window.scrollTo({ top: 0, behavior: 'smooth' });\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showScrollButton: false,\n      searchFont: '',\n      previewType: 'Custom',\n      previewText: 'Almost before we knew it, we had left the ground.',\n      fontSize: 40,\n      darkMode: false,\n      gridMode: true,\n    };\n    this.scrollToTop = scrollToTop;\n    this.onSearchFont = this.onSearchFont.bind(this);\n    this.onSelectPreviewTextType = this.onSelectPreviewTextType.bind(this);\n    this.onChangeTextPreview = this.onChangeTextPreview.bind(this);\n    this.onSelectFontSize = this.onSelectFontSize.bind(this);\n    this.onToggleDarkMode = this.onToggleDarkMode.bind(this);\n    this.onToggleGridMode = this.onToggleGridMode.bind(this);\n    this.onReset = this.onReset.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', () => {\n      if (window.pageYOffset > 500) {\n        this.setState({ showScrollButton: true });\n      } else {\n        this.setState({ showScrollButton: false });\n      }\n    });\n  }\n\n  /**\n   * @description Changes the font search term\n   * @param {Event} e\n   */\n  onSearchFont(e) {\n    const searchFont = e.target.value;\n    this.setState({ searchFont });\n  }\n\n  /**\n   * @description Changes the preview text with canned text based on preview option\n   * @param {Event} e\n   */\n  onSelectPreviewTextType(e) {\n    const previewType = e.target.value;\n    let { previewText, fontSize } = this.state;\n    if (previewType === 'Sentence') {\n      previewText = 'Almost before we knew it, we had left the ground.';\n      fontSize = 40;\n    } else if (previewType === 'Alphabet') {\n      previewText = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      fontSize = 24;\n    } else if (previewType === 'Paragraph') {\n      previewText =\n        'A peep at some distant orb has power to raise and purify our thoughts like a strain of sacred music, or a noble picture, or a passage from the grander poets. It always does one good.';\n      fontSize = 18;\n    } else if (previewType === 'Numerals') {\n      previewText = '1234567890';\n      fontSize = 24;\n    }\n    this.setState({ previewType, previewText, fontSize });\n  }\n\n  /**\n   * @description Changes the preview text\n   * @param {Event} e\n   */\n  onChangeTextPreview(e) {\n    const previewText = e.target.value;\n    this.setState({ previewType: 'Custom', previewText });\n  }\n\n  /**\n   * @description Changes selected the font size\n   * @param {Number} size\n   */\n  onSelectFontSize(e) {\n    const fontSize = Number(e.target.value);\n    this.setState({ fontSize });\n  }\n\n  /**\n   * @description Toggles the dark theme mode on/off\n   */\n  onToggleDarkMode() {\n    const { darkMode } = this.state;\n    this.setState({\n      darkMode: !darkMode,\n    });\n  }\n\n  /**\n   * @description Toggles between grid or list mode\n   */\n  onToggleGridMode() {\n    const { gridMode } = this.state;\n    this.setState({\n      gridMode: !gridMode,\n    });\n  }\n\n  /**\n   * @description Reset filters to initial default state\n   */\n  onReset() {\n    this.setState({\n      searchFont: '',\n      previewType: 'Custom',\n      previewText: 'Almost before we knew it, we had left the ground.',\n      fontSize: 40,\n    });\n  }\n\n  render() {\n    const { showScrollButton, darkMode } = this.state;\n    return (\n      <div\n        className={classNames(\n          { 'App min-vh-100': true },\n          { 'dark-mode': darkMode }\n        )}\n      >\n        <Header />\n        <Navbar\n          // Passing in the whole state like this probably isn't a great idea but ¯\\_(ツ)_/¯\n          parentState={this.state}\n          onSearchFont={this.onSearchFont}\n          onSelectPreviewTextType={this.onSelectPreviewTextType}\n          onChangeTextPreview={this.onChangeTextPreview}\n          onSelectFontSize={this.onSelectFontSize}\n          onToggleDarkMode={this.onToggleDarkMode}\n          onToggleGridMode={this.onToggleGridMode}\n          onReset={this.onReset}\n        />\n        <Body parentState={this.state} />\n        <Footer />\n        {showScrollButton && (\n          <button\n            className=\"scroll-up-button\"\n            type=\"button\"\n            onClick={this.scrollToTop}\n          >\n            <FontAwesomeIcon\n              className=\"fa-icon cursor-pointer muted\"\n              icon={faArrowUp}\n              size=\"lg\"\n            />\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}